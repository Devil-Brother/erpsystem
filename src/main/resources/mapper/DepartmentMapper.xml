<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myc.erpsystem.mapper.DepartmentMapper">
    <resultMap id="BaseResultMap" type="com.myc.erpsystem.model.Department">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="INTEGER"/>
        <result column="depPath" property="depPath" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="isParent" property="isParent" jdbcType="BIT"/>
    </resultMap>
    <!--
			collection定义关联的集合类型的属性的封装规则:
			extends：？？？？暂时理解为可以将当前result和父result属性结合
			property="emps":集合属性
			    指定这是哪个集合属性，这里为那个集合属性emps
			ofType: 集合类型
			    指定集合内封装的JavaBean类型(集合内装的什么)，这里即为Employee类
		 -->
    <resultMap id="DepartmentWithChildren" type="com.myc.erpsystem.model.Department" extends="BaseResultMap">
        <collection property="children" ofType="com.myc.erpsystem.model.Department"
                    select="com.myc.erpsystem.mapper.DepartmentMapper.getAllDepartmentsByParentId" column="id"/>
    </resultMap>
    <select id="getAllDepartmentsByParentId" resultMap="DepartmentWithChildren">
        select * from department where parentId=#{pid};
    </select>
    <sql id="Base_Column_List">
    id, name, parentId, depPath, enabled, isParent
  </sql>
<!--删除：使用了存储函数
#{result,mode=OUT,jdbcType=INTEGER}
-->
    <select id="deleteDepById" statementType="CALLABLE" parameterType="integer">
        call deleteDep(#{id,mode=IN,jdbcType=INTEGER},#{result,mode=OUT,jdbcType=INTEGER})
    </select>




</mapper>